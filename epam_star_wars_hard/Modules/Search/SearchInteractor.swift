//
//  SearchInteractor.swift
//  epam_star_wars_hard
//
//  Created by Nickolay Truhin on 18.02.2020.
//  Copyright (c) 2020 Nickolay Truhin. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit
import Alamofire
import CoreData

final class SearchInteractor {
    
    lazy var container: NSPersistentContainer = {
        let container = NSPersistentContainer(name: "CoreData")
        
        container.loadPersistentStores { storeDescription, error in
            // resolve conflict by using correct NSMergePolicy
            self.container.viewContext.mergePolicy = NSMergeByPropertyObjectTrumpMergePolicy
            
            if let error = error {
                print("Unresolved error \(error)")
            }
        }
        
        return container
    }()
    
    fileprivate let _networkService = NetworkService()
    fileprivate let _localService = LocalService()
}

// MARK: - Extensions -

extension SearchInteractor: SearchInteractorInterface {
    func addRecent(_ people: People) {
        _localService.addRecent(people, viewContext: container.viewContext)
    }
    
    func loadRecents() -> [People]? {
        let recents = _localService.getRecents(viewContext: container.viewContext)
        debugPrint("recents: \(recents)")
        return recents
    }
    
    @discardableResult
    func searchCharacters(query: String, completion: @escaping PeopleNetworkResponseCompletionBlock) -> DataRequest {
        return _networkService.searchPeoples(query: query, viewContext: container.viewContext, completion: completion)
    }
}
